# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "1.21" ]
  pull_request:
    branches: [ "1.21" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - forge
          - fabric
          - neoforge
      fail-fast: false
    env:
      DISABLE_FORGE: ${{ matrix.platform != 'forge' }}
      DISABLE_FABRIC: ${{ matrix.platform != 'fabric' }}
      DISABLE_NEOFORGE: ${{ matrix.platform != 'neoforge' }}
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/actions/wrapper-validation@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Set executable
        run: chmod +x ./gradlew
      - uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.event_name != 'push' }}
          gradle-home-cache-cleanup: true
          add-job-summary: 'on-failure'
      - name: javaToolchains
        run: ./gradlew :${{ matrix.platform }}:javaToolchains
      - name: Check Version
        run: ./gradlew :${{ matrix.platform }}:checkReleaseVersion
      - name: Build with Gradle
        run: ./gradlew :${{ matrix.platform }}:build
      - name: Game Test
        if: ${{ matrix.platform != 'forge' }}
        run: ./gradlew :${{ matrix.platform }}:runGameTestServer
